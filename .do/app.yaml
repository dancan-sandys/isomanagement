name: iso22000-fsms
region: nyc
services:
  # Backend API Service
  - name: backend
    source_dir: /backend
    github:
      repo: your-username/iso22000-fsms
      branch: main
    run_command: uvicorn app.main:app --host 0.0.0.0 --port $PORT --workers 4
    environment_slug: python
    instance_count: 2
    instance_size_slug: basic-xxs
    health_check:
      http_path: /health
    build_command: pip install -r requirements.txt
    dockerfile_path: null
    envs:
      - key: DATABASE_URL
        value: ${db.DATABASE_URL}
        type: SECRET
      - key: DATABASE_TYPE
        value: postgresql
      - key: SECRET_KEY
        value: ${SECRET_KEY}
        type: SECRET
      - key: ALGORITHM
        value: HS256
      - key: ACCESS_TOKEN_EXPIRE_MINUTES
        value: "30"
      - key: REFRESH_TOKEN_EXPIRE_DAYS
        value: "7"
      - key: APP_NAME
        value: "ISO 22000 FSMS"
      - key: APP_VERSION
        value: "1.0.0"
      - key: DEBUG
        value: "False"
      - key: ENVIRONMENT
        value: "production"
      - key: ALLOWED_ORIGINS
        value: '["https://iso22000-fsms-frontend.ondigitalocean.app", "https://your-domain.com"]'
      - key: ALLOWED_CREDENTIALS
        value: "True"
      - key: MAX_FILE_SIZE
        value: "10485760"
      - key: ALLOWED_FILE_TYPES
        value: "pdf,doc,docx,xls,xlsx,ppt,pptx,jpg,jpeg,png,gif"
      - key: ENABLE_EMAIL_NOTIFICATIONS
        value: "True"
      - key: SMTP_HOST
        value: ${SMTP_HOST}
        type: SECRET
      - key: SMTP_PORT
        value: "587"
      - key: SMTP_USER
        value: ${SMTP_USER}
        type: SECRET
      - key: SMTP_PASSWORD
        value: ${SMTP_PASSWORD}
        type: SECRET
      - key: SMTP_TLS
        value: "True"
      - key: LOG_LEVEL
        value: "INFO"
      - key: LOG_FORMAT
        value: "json"
      - key: BACKUP_ENABLED
        value: "True"
      - key: BACKUP_RETENTION_DAYS
        value: "30"
      - key: RATE_LIMIT_PER_MINUTE
        value: "100"
      - key: AWS_ACCESS_KEY_ID
        value: ${SPACES_ACCESS_KEY}
        type: SECRET
      - key: AWS_SECRET_ACCESS_KEY
        value: ${SPACES_SECRET_KEY}
        type: SECRET
      - key: AWS_BUCKET_NAME
        value: ${SPACES_BUCKET_NAME}
      - key: AWS_REGION
        value: ${SPACES_REGION}
      - key: AWS_ENDPOINT_URL
        value: ${SPACES_ENDPOINT_URL}

  # Frontend Application Service
  - name: frontend
    source_dir: /frontend
    github:
      repo: your-username/iso22000-fsms
      branch: main
    run_command: nginx -g 'daemon off;'
    environment_slug: nginx
    instance_count: 2
    instance_size_slug: basic-xxs
    health_check:
      http_path: /
    build_command: npm install && npm run build
    dockerfile_path: null
    envs:
      - key: REACT_APP_API_URL
        value: https://iso22000-fsms-backend.ondigitalocean.app/api/v1
      - key: REACT_APP_ENV
        value: production
      - key: REACT_APP_DEBUG
        value: "false"

databases:
  # PostgreSQL Database
  - name: db
    engine: PG
    version: "15"
    production: true
    cluster_name: iso22000-fsms-db
    db_name: iso22000_fsms
    db_user: iso22000_user

# Static Assets (if needed)
static_sites:
  - name: static-assets
    source_dir: /frontend/build/static
    github:
      repo: your-username/iso22000-fsms
      branch: main
    routes:
      - path: /static

# Environment Variables (global)
envs:
  - key: SECRET_KEY
    value: your-super-secret-key-change-this-in-production
    type: SECRET
  - key: SMTP_HOST
    value: smtp.gmail.com
    type: SECRET
  - key: SMTP_USER
    value: your-email@gmail.com
    type: SECRET
  - key: SMTP_PASSWORD
    value: your-app-password
    type: SECRET
  - key: SPACES_ACCESS_KEY
    value: your-spaces-access-key
    type: SECRET
  - key: SPACES_SECRET_KEY
    value: your-spaces-secret-key
    type: SECRET
  - key: SPACES_BUCKET_NAME
    value: iso22000-fsms-files
  - key: SPACES_REGION
    value: nyc3
  - key: SPACES_ENDPOINT_URL
    value: https://nyc3.digitaloceanspaces.com

