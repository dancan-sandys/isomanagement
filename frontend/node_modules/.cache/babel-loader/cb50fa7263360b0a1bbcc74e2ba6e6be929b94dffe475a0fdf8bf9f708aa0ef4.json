{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport { authAPI } from '../../services/api';\n\n// Types\n\n// Initial state\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('access_token'),\n  refreshToken: localStorage.getItem('refresh_token'),\n  isAuthenticated: !!localStorage.getItem('access_token'),\n  isLoading: false,\n  error: null\n};\n\n// Async thunks\nexport const login = createAsyncThunk('auth/login', async ({\n  username,\n  password\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await authAPI.login(username, password);\n    return response;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || 'Login failed');\n  }\n});\nexport const logout = createAsyncThunk('auth/logout', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    await authAPI.logout();\n    return;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    return rejectWithValue(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.detail) || 'Logout failed');\n  }\n});\nexport const getCurrentUser = createAsyncThunk('auth/getCurrentUser', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await authAPI.me();\n    return response;\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    return rejectWithValue(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.detail) || 'Failed to get user info');\n  }\n});\n\n// Auth slice\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    clearError: state => {\n      state.error = null;\n    },\n    setToken: (state, action) => {\n      state.token = action.payload;\n      state.isAuthenticated = true;\n      localStorage.setItem('access_token', action.payload);\n    },\n    setRefreshToken: (state, action) => {\n      state.refreshToken = action.payload;\n      localStorage.setItem('refresh_token', action.payload);\n    }\n  },\n  extraReducers: builder => {\n    builder\n    // Login\n    .addCase(login.pending, state => {\n      state.isLoading = true;\n      state.error = null;\n    }).addCase(login.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isAuthenticated = true;\n      state.token = action.payload.access_token;\n      state.refreshToken = action.payload.refresh_token;\n      state.user = action.payload.user;\n      localStorage.setItem('access_token', action.payload.access_token);\n      localStorage.setItem('refresh_token', action.payload.refresh_token);\n    }).addCase(login.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    })\n    // Logout\n    .addCase(logout.pending, state => {\n      state.isLoading = true;\n    }).addCase(logout.fulfilled, state => {\n      state.isLoading = false;\n      state.isAuthenticated = false;\n      state.user = null;\n      state.token = null;\n      state.refreshToken = null;\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n    }).addCase(logout.rejected, state => {\n      state.isLoading = false;\n      // Still clear auth state even if logout API fails\n      state.isAuthenticated = false;\n      state.user = null;\n      state.token = null;\n      state.refreshToken = null;\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n    })\n    // Get current user\n    .addCase(getCurrentUser.pending, state => {\n      state.isLoading = true;\n    }).addCase(getCurrentUser.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.user = action.payload;\n    }).addCase(getCurrentUser.rejected, (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n      // If we can't get user info, they might not be authenticated\n      if (action.payload === 'Failed to get user info') {\n        state.isAuthenticated = false;\n        state.user = null;\n        state.token = null;\n        state.refreshToken = null;\n        localStorage.removeItem('access_token');\n        localStorage.removeItem('refresh_token');\n      }\n    });\n  }\n});\nexport const {\n  clearError,\n  setToken,\n  setRefreshToken\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","authAPI","initialState","user","token","localStorage","getItem","refreshToken","isAuthenticated","isLoading","error","login","username","password","rejectWithValue","response","_error$response","_error$response$data","data","detail","logout","_","_error$response2","_error$response2$data","getCurrentUser","me","_error$response3","_error$response3$data","authSlice","name","reducers","clearError","state","setToken","action","payload","setItem","setRefreshToken","extraReducers","builder","addCase","pending","fulfilled","access_token","refresh_token","rejected","removeItem","actions","reducer"],"sources":["/Users/dancanoruko/Documents/agency/iso/frontend/src/store/slices/authSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\nimport { authAPI } from '../../services/api';\n\n// Types\nexport interface User {\n  id: number;\n  username: string;\n  email: string;\n  full_name: string;\n  role: string;\n  status: string;\n  department?: string;\n  position?: string;\n  phone?: string;\n  employee_id?: string;\n  profile_picture?: string;\n  is_active: boolean;\n  is_verified: boolean;\n  last_login?: string;\n  created_at: string;\n  updated_at: string;\n}\n\nexport interface AuthState {\n  user: User | null;\n  token: string | null;\n  refreshToken: string | null;\n  isAuthenticated: boolean;\n  isLoading: boolean;\n  error: string | null;\n}\n\n// Initial state\nconst initialState: AuthState = {\n  user: null,\n  token: localStorage.getItem('access_token'),\n  refreshToken: localStorage.getItem('refresh_token'),\n  isAuthenticated: !!localStorage.getItem('access_token'),\n  isLoading: false,\n  error: null,\n};\n\n// Async thunks\nexport const login = createAsyncThunk(\n  'auth/login',\n  async ({ username, password }: { username: string; password: string }, { rejectWithValue }) => {\n    try {\n      const response = await authAPI.login(username, password);\n      return response;\n    } catch (error: any) {\n      return rejectWithValue(error.response?.data?.detail || 'Login failed');\n    }\n  }\n);\n\nexport const logout = createAsyncThunk(\n  'auth/logout',\n  async (_, { rejectWithValue }) => {\n    try {\n      await authAPI.logout();\n      return;\n    } catch (error: any) {\n      return rejectWithValue(error.response?.data?.detail || 'Logout failed');\n    }\n  }\n);\n\nexport const getCurrentUser = createAsyncThunk(\n  'auth/getCurrentUser',\n  async (_, { rejectWithValue }) => {\n    try {\n      const response = await authAPI.me();\n      return response;\n    } catch (error: any) {\n      return rejectWithValue(error.response?.data?.detail || 'Failed to get user info');\n    }\n  }\n);\n\n// Auth slice\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    clearError: (state) => {\n      state.error = null;\n    },\n    setToken: (state, action: PayloadAction<string>) => {\n      state.token = action.payload;\n      state.isAuthenticated = true;\n      localStorage.setItem('access_token', action.payload);\n    },\n    setRefreshToken: (state, action: PayloadAction<string>) => {\n      state.refreshToken = action.payload;\n      localStorage.setItem('refresh_token', action.payload);\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      // Login\n      .addCase(login.pending, (state) => {\n        state.isLoading = true;\n        state.error = null;\n      })\n      .addCase(login.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.isAuthenticated = true;\n        state.token = action.payload.access_token;\n        state.refreshToken = action.payload.refresh_token;\n        state.user = action.payload.user;\n        localStorage.setItem('access_token', action.payload.access_token);\n        localStorage.setItem('refresh_token', action.payload.refresh_token);\n      })\n      .addCase(login.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload as string;\n      })\n      // Logout\n      .addCase(logout.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(logout.fulfilled, (state) => {\n        state.isLoading = false;\n        state.isAuthenticated = false;\n        state.user = null;\n        state.token = null;\n        state.refreshToken = null;\n        localStorage.removeItem('access_token');\n        localStorage.removeItem('refresh_token');\n      })\n      .addCase(logout.rejected, (state) => {\n        state.isLoading = false;\n        // Still clear auth state even if logout API fails\n        state.isAuthenticated = false;\n        state.user = null;\n        state.token = null;\n        state.refreshToken = null;\n        localStorage.removeItem('access_token');\n        localStorage.removeItem('refresh_token');\n      })\n      // Get current user\n      .addCase(getCurrentUser.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(getCurrentUser.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.user = action.payload;\n      })\n      .addCase(getCurrentUser.rejected, (state, action) => {\n        state.isLoading = false;\n        state.error = action.payload as string;\n        // If we can't get user info, they might not be authenticated\n        if (action.payload === 'Failed to get user info') {\n          state.isAuthenticated = false;\n          state.user = null;\n          state.token = null;\n          state.refreshToken = null;\n          localStorage.removeItem('access_token');\n          localStorage.removeItem('refresh_token');\n        }\n      });\n  },\n});\n\nexport const { clearError, setToken, setRefreshToken } = authSlice.actions;\nexport default authSlice.reducer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}