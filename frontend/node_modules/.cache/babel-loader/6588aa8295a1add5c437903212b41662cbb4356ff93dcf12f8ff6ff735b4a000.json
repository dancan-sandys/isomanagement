{"ast":null,"code":"import axios from 'axios';\n\n// API base configuration\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api/v1';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('access_token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle auth errors\napi.interceptors.response.use(response => response, async error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Token expired or invalid\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('refresh_token');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// API response types\n\n// Auth API\nexport const authAPI = {\n  login: async (username, password) => {\n    const formData = new FormData();\n    formData.append('username', username);\n    formData.append('password', password);\n    const response = await api.post('/auth/login', formData, {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      }\n    });\n    return response.data;\n  },\n  logout: async () => {\n    const response = await api.post('/auth/logout');\n    return response.data;\n  },\n  refresh: async refreshToken => {\n    const response = await api.post('/auth/refresh', {\n      refresh_token: refreshToken\n    });\n    return response.data;\n  },\n  me: async () => {\n    const response = await api.get('/auth/me');\n    return response.data;\n  }\n};\n\n// Users API\nexport const usersAPI = {\n  getUsers: async params => {\n    const response = await api.get('/users/', {\n      params\n    });\n    return response.data;\n  },\n  getUser: async id => {\n    const response = await api.get(`/users/${id}`);\n    return response.data;\n  },\n  createUser: async userData => {\n    const response = await api.post('/users/', userData);\n    return response.data;\n  },\n  updateUser: async (id, userData) => {\n    const response = await api.put(`/users/${id}`, userData);\n    return response.data;\n  },\n  deleteUser: async id => {\n    const response = await api.delete(`/users/${id}`);\n    return response.data;\n  }\n};\n\n// Documents API\nexport const documentsAPI = {\n  getDocuments: async params => {\n    const response = await api.get('/documents/', {\n      params\n    });\n    return response.data;\n  },\n  getDocument: async id => {\n    const response = await api.get(`/documents/${id}`);\n    return response.data;\n  },\n  createDocument: async documentData => {\n    const response = await api.post('/documents/', documentData);\n    return response.data;\n  },\n  updateDocument: async (id, documentData) => {\n    const response = await api.put(`/documents/${id}`, documentData);\n    return response.data;\n  },\n  deleteDocument: async id => {\n    const response = await api.delete(`/documents/${id}`);\n    return response.data;\n  },\n  uploadFile: async (file, documentId) => {\n    const formData = new FormData();\n    formData.append('file', file);\n    const response = await api.post(`/documents/${documentId}/upload`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n    return response.data;\n  }\n};\n\n// HACCP API\nexport const haccpAPI = {\n  getProducts: async params => {\n    const response = await api.get('/haccp/products/', {\n      params\n    });\n    return response.data;\n  },\n  getProcessFlows: async productId => {\n    const response = await api.get(`/haccp/products/${productId}/process-flows`);\n    return response.data;\n  },\n  getHazards: async processFlowId => {\n    const response = await api.get(`/haccp/process-flows/${processFlowId}/hazards`);\n    return response.data;\n  },\n  getCCPs: async processFlowId => {\n    const response = await api.get(`/haccp/process-flows/${processFlowId}/ccps`);\n    return response.data;\n  }\n};\n\n// PRP API\nexport const prpAPI = {\n  getPrograms: async params => {\n    const response = await api.get('/prp/programs/', {\n      params\n    });\n    return response.data;\n  },\n  getChecklists: async programId => {\n    const response = await api.get(`/prp/programs/${programId}/checklists`);\n    return response.data;\n  }\n};\n\n// Dashboard API\nexport const dashboardAPI = {\n  getStats: async () => {\n    const response = await api.get('/dashboard/stats');\n    return response.data;\n  },\n  getRecentActivity: async () => {\n    const response = await api.get('/dashboard/recent-activity');\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","login","username","password","formData","FormData","append","post","data","logout","refresh","refreshToken","refresh_token","me","get","usersAPI","getUsers","params","getUser","id","createUser","userData","updateUser","put","deleteUser","delete","documentsAPI","getDocuments","getDocument","createDocument","documentData","updateDocument","deleteDocument","uploadFile","file","documentId","haccpAPI","getProducts","getProcessFlows","productId","getHazards","processFlowId","getCCPs","prpAPI","getPrograms","getChecklists","programId","dashboardAPI","getStats","getRecentActivity"],"sources":["/Users/dancanoruko/Documents/agency/iso/frontend/src/services/api.ts"],"sourcesContent":["import axios, { AxiosInstance, AxiosResponse } from 'axios';\n\n// API base configuration\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000/api/v1';\n\n// Create axios instance\nconst api: AxiosInstance = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('access_token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor to handle auth errors\napi.interceptors.response.use(\n  (response: AxiosResponse) => response,\n  async (error) => {\n    if (error.response?.status === 401) {\n      // Token expired or invalid\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n      window.location.href = '/login';\n    }\n    return Promise.reject(error);\n  }\n);\n\n// API response types\nexport interface ApiResponse<T = any> {\n  success: boolean;\n  message: string;\n  data?: T;\n}\n\nexport interface PaginatedResponse<T> {\n  items: T[];\n  total: number;\n  page: number;\n  size: number;\n  pages: number;\n}\n\n// Auth API\nexport const authAPI = {\n  login: async (username: string, password: string) => {\n    const formData = new FormData();\n    formData.append('username', username);\n    formData.append('password', password);\n    \n    const response = await api.post('/auth/login', formData, {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n    });\n    return response.data;\n  },\n\n  logout: async () => {\n    const response = await api.post('/auth/logout');\n    return response.data;\n  },\n\n  refresh: async (refreshToken: string) => {\n    const response = await api.post('/auth/refresh', {\n      refresh_token: refreshToken,\n    });\n    return response.data;\n  },\n\n  me: async () => {\n    const response = await api.get('/auth/me');\n    return response.data;\n  },\n};\n\n// Users API\nexport const usersAPI = {\n  getUsers: async (params?: {\n    page?: number;\n    size?: number;\n    search?: string;\n    role?: string;\n  }) => {\n    const response = await api.get('/users/', { params });\n    return response.data;\n  },\n\n  getUser: async (id: number) => {\n    const response = await api.get(`/users/${id}`);\n    return response.data;\n  },\n\n  createUser: async (userData: any) => {\n    const response = await api.post('/users/', userData);\n    return response.data;\n  },\n\n  updateUser: async (id: number, userData: any) => {\n    const response = await api.put(`/users/${id}`, userData);\n    return response.data;\n  },\n\n  deleteUser: async (id: number) => {\n    const response = await api.delete(`/users/${id}`);\n    return response.data;\n  },\n};\n\n// Documents API\nexport const documentsAPI = {\n  getDocuments: async (params?: {\n    page?: number;\n    size?: number;\n    search?: string;\n    category?: string;\n    status?: string;\n  }) => {\n    const response = await api.get('/documents/', { params });\n    return response.data;\n  },\n\n  getDocument: async (id: number) => {\n    const response = await api.get(`/documents/${id}`);\n    return response.data;\n  },\n\n  createDocument: async (documentData: any) => {\n    const response = await api.post('/documents/', documentData);\n    return response.data;\n  },\n\n  updateDocument: async (id: number, documentData: any) => {\n    const response = await api.put(`/documents/${id}`, documentData);\n    return response.data;\n  },\n\n  deleteDocument: async (id: number) => {\n    const response = await api.delete(`/documents/${id}`);\n    return response.data;\n  },\n\n  uploadFile: async (file: File, documentId: number) => {\n    const formData = new FormData();\n    formData.append('file', file);\n    \n    const response = await api.post(`/documents/${documentId}/upload`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n      },\n    });\n    return response.data;\n  },\n};\n\n// HACCP API\nexport const haccpAPI = {\n  getProducts: async (params?: {\n    page?: number;\n    size?: number;\n    search?: string;\n  }) => {\n    const response = await api.get('/haccp/products/', { params });\n    return response.data;\n  },\n\n  getProcessFlows: async (productId: number) => {\n    const response = await api.get(`/haccp/products/${productId}/process-flows`);\n    return response.data;\n  },\n\n  getHazards: async (processFlowId: number) => {\n    const response = await api.get(`/haccp/process-flows/${processFlowId}/hazards`);\n    return response.data;\n  },\n\n  getCCPs: async (processFlowId: number) => {\n    const response = await api.get(`/haccp/process-flows/${processFlowId}/ccps`);\n    return response.data;\n  },\n};\n\n// PRP API\nexport const prpAPI = {\n  getPrograms: async (params?: {\n    page?: number;\n    size?: number;\n    category?: string;\n  }) => {\n    const response = await api.get('/prp/programs/', { params });\n    return response.data;\n  },\n\n  getChecklists: async (programId: number) => {\n    const response = await api.get(`/prp/programs/${programId}/checklists`);\n    return response.data;\n  },\n};\n\n// Dashboard API\nexport const dashboardAPI = {\n  getStats: async () => {\n    const response = await api.get('/dashboard/stats');\n    return response.data;\n  },\n\n  getRecentActivity: async () => {\n    const response = await api.get('/dashboard/recent-activity');\n    return response.data;\n  },\n};\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}